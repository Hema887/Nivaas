pipeline {
    agent any
    tools {
        maven 'myMaven' // Ensure 'myMaven' is configured in Jenkins
    }

    stages {
        stage('PR Build') {
            when {
                changeRequest()  // Runs only for pull requests
            }
            steps {
                dir('juvarya') { 
                    sh 'mvn clean install'  // Run Maven build for the PR
                }
            }
        }

        stage('Post-Merge Deployment') {
            when {
                expression {
                    // Ensure deployment happens only after a PR is merged into the 'main' branch
                    return env.ghprbTargetBranch == 'main' && env.ghprbPullId == null  // PR merged
                }
            }
            steps {
                script {
                    echo 'Pull request merged into main branch successfully!'
                }
                // SSH into the VM and perform git pull and deployment
                sshagent(['6141d2f1-dd35-46de-8af1-e298f328a4b4']) {
                    sh '''
                        ssh jenkins@20.2.249.184 '
                        git config --global --add safe.directory /opt/Sample/juvarya &&
                        cd /opt/Sample/juvarya &&
                        git stash &&  # Stash any local changes
                        git pull --allow-unrelated-histories &&  # Pull the latest code
                        git stash pop &&  # Reapply stashed changes
                        mvn clean install  # Build the application on the VM
                        '
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment and build were successful!'
        }
        failure {
            echo 'Deployment failed. Please check the logs.'
        }
    }
}
